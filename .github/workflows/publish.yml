name: Publish to npm

on:
  push:
    tags:
      - "v*.*.*"   # publish on version tags like v1.2.3
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Dry run (no publish)"
        required: false
        default: false
        type: boolean

concurrency:
  group: publish-npm-${{ github.ref }}
  cancel-in-progress: false

jobs:
  publish:
    name: Publish package
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write   # required for npm provenance

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
          cache: true
          cache-dependency-path: |
            **/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test --if-present

      - name: Build
        run: pnpm build

      - name: Ensure tag matches package.json version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          PKG_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "package.json version: $PKG_VERSION"
          echo "tag version:        $TAG_VERSION"
          if [ "$PKG_VERSION" != "$TAG_VERSION" ]; then
            echo "::error::Tag version ($TAG_VERSION) does not match package.json version ($PKG_VERSION)" >&2
            exit 1
          fi
          echo "PKG_VERSION=$PKG_VERSION" >> $GITHUB_ENV

      - name: Skip if version already published
        run: |
          NAME=$(node -p "require('./package.json').name")
          VERSION=${PKG_VERSION:-$(node -p "require('./package.json').version")}
          echo "Checking if $NAME@$VERSION exists on npm..."
          if npm view "$NAME@$VERSION" version > /dev/null 2>&1; then
            echo "Version already published. Skipping publish."
            echo "SKIP_PUBLISH=true" >> $GITHUB_ENV
          fi

      - name: Publish to npm
        if: env.SKIP_PUBLISH != 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ '${{ inputs.dry_run }}' = 'true' ]; then
            echo "Dry run enabled: showing files that would be published"
            npm publish --access public --provenance --dry-run
          else
            npm publish --access public --provenance
          fi

      - name: Post-publish summary
        if: env.SKIP_PUBLISH != 'true' && inputs.dry_run != true
        run: |
          NAME=$(node -p "require('./package.json').name")
          VERSION=${PKG_VERSION:-$(node -p "require('./package.json').version")}
          echo "Published $NAME@$VERSION to npm." > $GITHUB_STEP_SUMMARY

      - name: Post-skip summary
        if: env.SKIP_PUBLISH == 'true'
        run: |
          NAME=$(node -p "require('./package.json').name")
          VERSION=${PKG_VERSION:-$(node -p "require('./package.json').version")}
          echo "$NAME@$VERSION already exists on npm. No action taken." > $GITHUB_STEP_SUMMARY
